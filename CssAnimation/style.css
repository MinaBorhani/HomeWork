/* body{
    background: lightblue;
    text-align: center;
}

.wrapper{
    width: 100%;
    padding: 20px;
    box-sizing: border-box;
} */



/* img{ */
    /* ----. transforme .----- */

    /* //// 1.transforme :translate() */

    /* Moves the image on the X axis 
    If we give a negative number it moves to the left 
    and if we give a positive number it moves to the right*/
    /* transform: translateX(0px);  */
    
    /* Moves the image on the Y axis 
    If we give a negative number it moves to the top 
    and if we give a positive number it moves to the down*/
    /* transform: translateY(0px);  */

    /* Moves the image on the Y & X axis 
    The first value moves on the X axis and
     the second number on the Y axis*/
    /* transform: translate(0px , 0px); */
    

    /* //// 2.transforme :scale() */

    /* Zooms in and out on the X axis */
    /* transform: scaleX(0); */

    /* Zooms in and out on the X axis */
    /* transform: scaleY(0); */

    /* Zooms in and out on the X and Y axis */
    /* transform: scale(0); */

    /* //// 3.transforme :rotate() */

    /* Rotates the image on the X axis in 3D */
    /* transform: rotateX(0deg); */

    /* Rotates the image on the Y axis in 3D */
    /* transform: rotateY(0deg); */

    /* Rotates the image on the X and Y axis
    clockwise and counterclockwise */
    /* transform: rotateZ(0deg); */

    /* ///////////////////////////////////////////////// */

/* } */

/* 
.circle{
    width: 100px;
    padding: 50px 0;
    line-height: 0;
    margin: 60px auto;
    background: pink;
    color: white;
    border-radius: 50px;
    cursor: pointer; */

    /* Transitions */
    /* Background setting is done before the background change time
    linear => In this way, change is never accelerated or slowed down
    ease-in => In this method, first the speed of change is reduced and then it is accelerated
    ease-out => In this method, change is first fast and then slow*/
    /* transition: background 1s , transform 1s 1s linear;
} */

/* .circle:hover {
    background: salmon;
    transform: rotate(360deg);
} */



/* ////////////////////////////////////////////////////////////////////// */

html , body{
    height: 100%;
    width: 100%;
    overflow: hidden;
    margin: 0;
}

.grass , .sky , .road {
    position: relative;
}

.sky{
    height: 40%;
    background: skyblue;
}

.grass{
    height: 30%;
    background: seagreen;
}

.road{
    height: 30%;
    background: dimgray;
    box-sizing: border-box;
    border-top: 10px solid gray;
    border-bottom: 10px solid gray;
    width: 100%;
}

.lines{
    box-sizing: border-box;
    border: 5px dashed #fff;
    height: 0px;
    width: 100%;
    position: absolute;
    top: 45%;
}

/* //ELEMENTS TO ANIMATION // */
.mario{
    position: absolute;
    top: -40px;
    left: 0px;
    animation-name: drive;
    animation-duration: 3s;

    /* ***** Animation Fill Mode **** */

    /* animation-fill-mode: forwards; */
    /* animation-fill-mode: backwards; */
    /* == */
    animation-fill-mode: both;
    /* animation-delay: 2s; */

    /* Repeats the animation infinite times. */
    animation-iteration-count: infinite;

    /* We can control the speed of the animation
    https://cubic-bezier.com */
    animation-timing-function: cubic-bezier(0,.77,1,.28);

}


.luigi{
    position: absolute;
    top: 100px;
    left: 0;
    animation-name: drive;
    animation-duration: 5s;
    animation-fill-mode: both;
    animation-iteration-count: infinite;

    

    /* Animation mode :
    alternates => The animation goes first forward and then backward
    reverse => The animation goes back */
    animation-direction: reverse;
}
/* // KEYFRAMES // */
@keyframes drive{
    from{transform: translateX(-200);}
    to{transform: translate(2200px);}
} 